@import "assets/styles/breakpoints";

@mixin grid-size($columns) {
  @if $columns == 0 {
    display: none;
  } @else {
    flex-basis: (100% / 12) * $columns;
    max-width: (100% / 12) * $columns;
  }
}

.grid {
  &__container {
    display: flex;
    flex-wrap: wrap;
    box-sizing: border-box;
    flex-direction: row;
  }

  &__item {
    box-sizing: border-box;
    flex-grow: 0;
    max-width: 100%;
    flex-basis: 100%;
  }
}

@for $i from 0 through 12 {
  .size-#{$i} {
    @include grid-size($i);
  }

  @include between(xs, md) {
    .sm-#{$i} {
      @include grid-size($i);
    }
  }

  @include between(md, lg) {
    .md-#{$i} {
      @include grid-size($i);
    }
  }

  @include between(lg, xl) {
    .lg-#{$i} {
      @include grid-size($i);
    }
  }

  @include up(xl) {
    .lg-#{$i} {
      @include grid-size($i);
    }
  }
}

@function replace-dot($value) {
  $string: unquote($value + '');
  $new-string: '';
  $length: str-length($string);

  @for $i from 1 through $length {
    $char: str-slice($string, $i, $i);

    @if $char == '.' {
      $new-string: #{$new-string}-;
    } @else {
      $new-string: #{$new-string}#{$char};
    }
  }

  @return $new-string;
}

@function spacing-class($spacing) {
  @return 'spacing-' + replace-dot($spacing);
}

@function gap-class($spacing) {
  @return 'gap-' + replace-dot($spacing);
}

@for $i from 0 through 10 {
  .#{spacing-class($i)} {
    margin-top: calc(-#{$i} * 0.5rem);
    margin-left: calc(-#{$i} * 0.5rem);
    width: calc(100% + calc(#{$i} * 0.5rem));
  }

  .#{gap-class($i)} {
    .grid__item {
      padding-top: calc(#{$i} * 0.5rem);
      padding-left: calc(#{$i} * 0.5rem);
    }
  }
}
